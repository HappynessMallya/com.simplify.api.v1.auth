security:
    encoders:
        App\Infrastructure\Symfony\Security\UserEntity:
            algorithm: auto
        App\Domain\Model\User\User:
            algorithm: auto
    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_COMPANY: ROLE_COMPANY
        ROLE_ADMIN: [ROLE_USER]
        SUPER_ADMIN: [ROLE_USER, ROLE_COMPANY, ROLE_ADMIN]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Infrastructure\Symfony\Security\UserEntity
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/api/v1/account/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/v1/account/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        register:
            pattern:  ^/api/v1/user/register
            stateless: true
            anonymous: true
        changepassword:
            pattern: ^/api/v1/user/change-password
            stateless: true
            anonymous: true
            methods: [PUT]
        refresh:
            pattern:  ^/api/v1/token/refresh
            stateless: true
            anonymous: true
        company_registration:
            pattern:   ^/api/v1/company/\d+$
            stateless: true
            anonymous: true
            methods: ['POST']
        company_gettin:
            pattern:   ^/api/v1/company/
            stateless: true
            anonymous: true
            methods: ['GET']
        api:
            pattern:   ^/api/v1
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/v1/account/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/user/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/api/v1/company/, roles: IS_ANONYMOUS, allow_if: "'127.0.0.1' == request.getClientIp()" }
        #- { path: ^/api/v1/company, roles: ROLE_USER }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
